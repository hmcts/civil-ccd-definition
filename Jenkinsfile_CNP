#!groovy

@Library("Infrastructure")
import uk.gov.hmcts.contino.AppPipelineConfig

def type = "java"
def product = "civil"
def component = "ccd"
AppPipelineConfig pipelineConf

static Map<String, Object> secret(String secretName, String envVariable) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   envVariable: envVariable
  ]
}

def secrets = [
  's2s-${env}': [
    secret('microservicekey-ccd-gw', 'CCD_API_GATEWAY_S2S_KEY'),
    secret('microservicekey-ccd-data', 'CCD_DATA_STORE_S2S_SECRET'),
    secret('microservicekey-ccd-definition', 'CCD_DEFINITION_STORE_S2S_SECRET')
  ],
  'ccd-${env}': [
    secret('ccd-api-gateway-oauth2-client-secret', 'CCD_API_GATEWAY_OAUTH2_CLIENT_SECRET'),
    secret('postcode-info-address-lookup-token', 'ADDRESS_LOOKUP_TOKEN')
  ],
  'civil-${env}': [
    secret('microservicekey-civil-service', 'S2S_SECRET'),
    secret('ccd-importer-username', 'DEFINITION_IMPORTER_USERNAME'),
    secret('ccd-importer-password', 'DEFINITION_IMPORTER_PASSWORD')
  ]
]

def createGithubRelease() {
  sh """
    ./bin/create-github-release.sh
  """
}

def archiveCoreCaseDataDefinitions() {
  dir("${WORKSPACE}/bin") {
    sh """
      eval \$(./variables/load-${env.ENVIRONMENT}-environment-variables.sh ${CHANGE_ID})
      ./build-release-ccd-definition.sh ${env.ENVIRONMENT}
      ./add-roles.sh
    """
  }

  dir("${WORKSPACE}/build") {
    steps.archiveArtifacts artifacts: "ccd-release-config/civil-ccd-${env.ENVIRONMENT}.xlsx"
  }
}

def uploadCoreCaseDataDefinitions(env) {
  dir("${WORKSPACE}/bin"){
    ccdDefinitionFilePath="${WORKSPACE}/build/ccd-release-config/civil-ccd-${env}.xlsx"
    sh """
      ${WORKSPACE}/bin/utils/ccd-import-definition.sh ${ccdDefinitionFilePath}
    """
  }
}

withPipeline(type, product, component) {
  pipelineConf = config
  disableLegacyDeployment()
  enableAksStagingDeployment()
  enableSlackNotifications('#civil_notifications')
  syncBranchesWithMaster(['demo'])
  enableHighLevelDataSetup()
  loadVaultSecrets(secrets)

  onPR {
    env.ENVIRONMENT = "preview"
    env.DEFINITION_STORE_URL_BASE = "https://ccd-definition-store-civil-ccd-pr-${CHANGE_ID}.service.core-compute-preview.internal"
  }
  onMaster {
    env.ENVIRONMENT="aat"
    env.DEFINITION_STORE_URL_BASE = "http://ccd-definition-store-api-aat.service.core-compute-aat.internal"

  }
  onDemo {
    env.ENVIRONMENT = "demo"
  }
  onPerftest{
    env.ENVIRONMENT = "perftest"
  }

  before('highleveldatasetup') {
    archiveCoreCaseDataDefinitions()
  }

  before('smoketest:preview') {
    sh """
      eval \$(./variables/load-preview-environment-variables.sh ${CHANGE_ID})
      ./bin/add-roles.sh
      ./bin/pull-latest-release-asset.sh civil-camunda-bpmn-definition civil-camunda-bpmn-definition.zip
      ./bin/import-bpmn-diagram.sh .
    """
    uploadCoreCaseDataDefinitions('preview')

    env.URL="https://xui-civil-ccd-pr-${CHANGE_ID}.service.core-compute-preview.internal"
    env.CIVIL_SERVICE_URL="http://civil-ccd-pr-${CHANGE_ID}.service.core-compute-preview.internal"
  }

  after('smoketest:preview') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'output/**/*'
  }

  before('functionalTest:preview') {
    env.IDAM_API_URL = "https://idam-api.aat.platform.hmcts.net"
    env.SERVICE_AUTH_PROVIDER_API_BASE_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
    env.CCD_DATA_STORE_URL = "http://ccd-data-store-api-civil-ccd-pr-${CHANGE_ID}.service.core-compute-preview.internal"
    env.DM_STORE_URL = "http://dm-store-aat.service.core-compute-aat.internal"
    env.CIVIL_SERVICE_URL="http://civil-ccd-pr-${CHANGE_ID}.service.core-compute-preview.internal"
  }

  after('functionalTest:preview') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'output/**/*'
  }

  before('smoketest:aat') {
    sh """
      eval \$(./bin/variables/load-staging-environment-variables.sh)
      ./bin/add-roles.sh
      ./bin/pull-latest-release-asset.sh civil-camunda-bpmn-definition civil-camunda-bpmn-definition.zip
      ./bin/import-bpmn-diagram.sh .
    """
    env.URL="https://civil-ccd-xui-staging.aat.platform.hmcts.net"
    env.CIVIL_SERVICE_URL="http://civil-ccd-staging.service.core-compute-aat.internal"
    archiveCoreCaseDataDefinitions('staging')
    uploadCoreCaseDataDefinitions('staging')
  }

  after('smoketest:aat') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'output/**/*'
  }

  before('functionalTest:aat') {
    env.IDAM_API_URL = "https://idam-api.aat.platform.hmcts.net"
    env.SERVICE_AUTH_PROVIDER_API_BASE_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
    env.CCD_DATA_STORE_URL = "http://civil-ccd-data-store-staging-aat.service.core-compute-aat.internal"
    env.DM_STORE_URL = "http://dm-store-aat.service.core-compute-aat.internal"
    env.CIVIL_SERVICE_URL="http://civil-ccd-staging.service.core-compute-aat.internal"
  }

  after('functionalTest:aat') {
    createGithubRelease()
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'output/**/*'
  }
}
