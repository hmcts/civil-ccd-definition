ccd-case-document-am-api:
  enabled: false
em-ccdorc:
  enabled: false
em-stitching:
  enabled: false

civil-general-applications:
  enabled: false
civil-service:
  java:
    ingressHost: ${SERVICE_NAME}.aat.platform.hmcts.net
    environment:
      LAUNCH_DARKLY_ENV: ccd-staging
      SERVICE_REQUEST_UPDATE: https://${SERVICE_NAME}.aat.platform.hmcts.net/service-request-update
      SERVICE_REQUEST_UPDATE_CLAIM_ISSUED: https://${SERVICE_NAME}.aat.platform.hmcts.net/service-request-update-claim-issued
      OIDC_ISSUER: https://forgerock-am.service.core-compute-idam-aat2.internal:8443/openam/oauth2/realms/root/realms/hmcts
      HMC_HEARINGS_SUBSCRIPTION_ENABLED: false
      CAMUNDA_URL: https://civil-ccd-camunda-staging-aat.aat.platform.hmcts.net/engine-rest/
      CMC_DB_PASSWORD: "{{ .Values.postgresql.auth.postgresPassword}}"
      RD_PROFESSIONAL_API_URL: https://civil-ccd-wiremock-staging-aat.aat.platform.hmcts.net
      DOCMOSIS_TORNADO_URL: https://civil-ccd-wiremock-staging-aat.aat.platform.hmcts.net

idam-pr:
  redirect_uris:
    XUI:
      - https://civil-ccd-xui-staging.aat.platform.hmcts.net/oauth2/callback
xui-webapp:
  nodejs:
    ingressHost: civil-ccd-xui-staging.aat.platform.hmcts.net
ccd:
  ccd-api-gateway-web:
    nodejs:
      ingressHost: civil-ccd-gateway-staging-aat.aat.platform.hmcts.net
  ccd-data-store-api:
    java:
      ingressHost: civil-ccd-data-store-staging-aat.aat.platform.hmcts.net
      environment:
        DATA_STORE_DB_PASSWORD: ${POSTGRES_PASSWORD}
        DATA_STORE_DB_OPTIONS: "?stringtype=unspecified"
      secrets:
        STORAGE_ACCOUNT_NAME:
          secretRef: storage-secret-{{ .Release.Name }}-blobstorage
          key: storageAccountName
          disabled: true
        STORAGE_ACCOUNT_KEY:
          secretRef: storage-secret-{{ .Release.Name }}-blobstorage
          key: accessKey
          disabled: true
        DATA_STORE_DB_PASSWORD:
          secretRef: "{{ .Values.global.postgresSecret }}"
          key: PASSWORD
          disabled: true

  ccd-definition-store-api:
    java:
      ingressHost: civil-ccd-definition-store-staging-aat.aat.platform.hmcts.net
      environment:
        DEFINITION_STORE_DB_PASSWORD: ${POSTGRES_PASSWORD}
        DEFINITION_STORE_DB_OPTIONS: "?stringtype=unspecified"
      secrets:
        STORAGE_ACCOUNT_NAME:
          secretRef: storage-secret-{{ .Release.Name }}-blobstorage
          key: storageAccountName
          disabled: true
        STORAGE_ACCOUNT_KEY:
          secretRef: storage-secret-{{ .Release.Name }}-blobstorage
          key: accessKey
          disabled: true
        DEFINITION_STORE_DB_PASSWORD:
          secretRef: "{{ .Values.global.postgresSecret }}"
          key: PASSWORD
          disabled: true

  ccd-user-profile-api:
    java:
      ingressHost: civil-ccd-xui-staging-aat.aat.platform.hmcts.net
      environment:
        USER_PROFILE_DB_PASSWORD: ${POSTGRES_PASSWORD}
        USER_PROFILE_DB_OPTIONS: "?stringtype=unspecified"
      secrets:
        USER_PROFILE_DB_PASSWORD:
          secretRef: "{{ .Values.global.postgresSecret }}"
          key: PASSWORD
          disabled: true

camunda-bpm:
  java:
    ingressHost: civil-ccd-camunda-staging-aat.aat.platform.hmcts.net
    environment:
      CAMUNDA_DB_USER_NAME: ${POSTGRES_USER}
      CAMUNDA_DB_PASSWORD: ${POSTGRES_PASSWORD}

aac-manage-case-assignment:
  java:
    ingressHost: manage-case-assignment-civil-ccd-staging-aat.aat.platform.hmcts.net
civil-wa:
  enabled: false

postgresql:
  enabled: false

ccd-events-topic:
  enabled: false

wiremock:
  enabled: true
  image: "wiremock/wiremock"
  applicationPort: 8080
  imagePullPolicy: Always
  releaseNameOverride : ${SERVICE_NAME}-wiremock
  verbose: true
  ingressHost: civil-ccd-wiremock-staging-aat.aat.platform.hmcts.net
  volumes:
    - name: wiremock-mocks
      configMap:
        name: {{ .Release.Name }}-wiremock-wm
  volumeMounts:
    - name: wiremock-mocks
      mountPath: /home/wiremock/mappings
      subPath: mappings
