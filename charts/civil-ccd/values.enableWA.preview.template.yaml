global:
  jobKind: CronJob

camunda-bpm:
  enabled: false

civil-wa:
  enabled: true

wa:
  global:
    postgresUsername: hmcts
    postgresSecret: postgres
    postgresHost: ${SERVICE_NAME}-postgresql
#    postgresHost: civil-preview.postgres.database.azure.com
#    databaseNamePrefix: "pr-${CHANGE_ID}-"
  wa:
    postgresql:
      enabled: false
  wa-case-event-handler:
    java:
      ingressHost: wa-case-event-handler-${SERVICE_FQDN}
      releaseNameOverride: ${SERVICE_NAME}-wa-case-event-handler
      secrets:
        AZURE_SERVICE_BUS_CONNECTION_STRING:
          secretRef: civil-sb-preview
          key: connectionString
        POSTGRES_PASSWORD:
          secretRef: "{{ .Values.global.postgresSecret }}"
          key: PASSWORD
          disabled: true
      environment:
        CCD_URL: http://{{ .Release.Name }}-ccd-data-store-api
        CCD_SEARCH_URL: http://{{ .Release.Name }}-ccd-data-store-api
        ROLE_ASSIGNMENT_URL: http://am-role-assignment-service-aat.service.core-compute-aat.internal
        AZURE_SERVICE_BUS_TOPIC_NAME: ${SERVICE_NAME}-asb-ccd-case-events
        AZURE_SERVICE_BUS_SUBSCRIPTION_NAME: ${SERVICE_NAME}-asb-ccd-case-events
        #AZURE_SERVICE_BUS_TOPIC_NAME: servicebus-topic-{{ .Release.Name }}-asb-ccd-case-events
        AZURE_SERVICE_BUS_CCD_CASE_EVENTS_SUBSCRIPTION_NAME: ${SERVICE_NAME}-asb-ccd-case-events
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_CONNECTION_OPTIONS: "?stringtype=unspecified"

  wa-task-monitor:
    java:
      ingressHost: wa-task-monitor-${SERVICE_FQDN}
      environment:
        WA_TASK_MANAGEMENT_API_URL: http://{{ .Release.Name }}-wa-task-management-api
        ROLE_ASSIGNMENT_URL: http://am-role-assignment-service-aat.service.core-compute-aat.internal

  wa-task-management-api:
    java:
      ingressHost: ccd-message-publisher-${SERVICE_FQDN}
      environment:
        ROLE_ASSIGNMENT_URL: http://am-role-assignment-service-aat.service.core-compute-aat.internal
        POSTGRES_CONNECTION_OPTIONS: "?stringtype=unspecified"
        POSTGRES_HOST: "{{ .Release.Name }}-postgresql"
        POSTGRES_REPLICA_HOST: "{{ .Release.Name }}-postgresql"
        POSTGRES_REPLICA_PORT: 5432
        POSTGRES_NAME: "cft_task_db"
        POSTGRES_REPLICA_NAME: "cft_task_db_replica"
        POSTGRES_USERNAME: postgres
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        REPLICATION_USERNAME: postgres
        REPLICATION_PASSWORD: ${POSTGRES_PASSWORD}
        SPRING_PROFILES_ACTIVE: "preview"
        DB_READER_USERNAME: postgres
      secrets:
        POSTGRES_PASSWORD:
          secretRef: "{{ .Values.global.postgresSecret }}"
          key: PASSWORD
          disabled: true
  wa-workflow-api:
    java:
      environment:
        DB_READER_USERNAME: "hmcts"
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_CONNECTION_OPTIONS: "?stringtype=unspecified"
        CAMUNDA_URL: https://camunda-${SERVICE_FQDN}/engine-rest/
    secrets:
      POSTGRES_PASSWORD:
        secretRef: "{{ .Values.global.postgresSecret }}"
        key: PASSWORD
        disabled: true
  camunda-bpm:
    java:
      image: hmctsprivatetemp.azurecr.io/camunda/bpm:latest
      environment:
        CAMUNDA_DB_USER_NAME: "hmcts"
        CAMUNDA_DB_PASSWORD: ${POSTGRES_PASSWORD}
        CAMUNDA_DB_CONN_OPTIONS: "?stringtype=unspecified"
        CAMUNDA_DB_NAME: 'camunda'
        TASK_MANAGEMENT_API_URL: http://{{ .Release.Name }}-wa-task-management-api
        CAMUNDA_API_AUTH_ENABLED: false
      secrets:
        CAMUNDA_DB_PASSWORD:
          secretRef: "{{ .Values.global.postgresSecret }}"
          key: PASSWORD
          disabled: true

am-org-role-mapping-service:
  enabled: true
  java:
    image: 'hmctspublic.azurecr.io/am/org-role-mapping-service:latest'
    ingressHost: am-org-role-mapping-service-${SERVICE_FQDN}
    releaseNameOverride: ${SERVICE_NAME}-am-org-role-mapping-service
    devmemoryRequests: 1024Mi
    devcpuRequests: 250m
    devmemoryLimits: 2048Mi
    devcpuLimits: 1500m
    keyVaults:
      am:
        secrets:
          - name: app-insights-connection-string
            alias: app-insights-connection-string
          - name: am-org-role-mapping-service-s2s-secret
            alias: AM_ORG_ROLE_MAPPING_SERVICE_SECRET
          - name: role-assignment-service-LD-SDK-KEY
            alias: LD_SDK_KEY
          - name: orm-IDAM-CLIENT-ID
            alias: ORM_IDAM_CLIENT_ID
          - name: orm-IDAM-CLIENT-SECRET
            alias: ORG_ROLE_MAPPING_IDAM_CLIENT_SECRET
          - name: orm-IDAM-ADMIN-SECRET
            alias: ORG_ROLE_MAPPING_IDAM_ADMIN_PASSWORD
          - name: caseworker-topic-primary-send-listen-shared-access-key
            alias: AMQP_CRD_SHARED_ACCESS_KEY_VALUE
          - name: judicial-topic-primary-send-listen-shared-access-key
            alias: AMQP_JRD_SHARED_ACCESS_KEY_VALUE
    secrets:
      SB_ACCESS_KEY:
        secretRef: civil-sb-preview
        key: primaryKey
      SB_CONNECTION_STRING:
        secretRef: civil-sb-preview
        key: connectionString
    environment:
      TEMP_FLAG: 1
      CASE_WORKER_REF_APP_URL: http://rd-caseworker-ref-api-aat.service.core-compute-aat.internal
      ROLE_ASSIGNMENT_APP_URL: https://am-role-assignment-${SERVICE_FQDN}
      LAUNCH_DARKLY_ENV: pr
      AMQP_SHARED_ACCESS_KEY_NAME: RootManageSharedAccessKey
      AMQP_HOST: "civil-sb-preview.servicebus.windows.net"
      CRD_SUBSCRIPTION_NAME: "{{ .Release.Name}}-asb-crd-topic"
      JRD_SUBSCRIPTION_NAME: "{{ .Release.Name}}-asb-jrd-topic"
      CRD_TOPIC_NAME: "{{ .Release.Name}}-asb-crd-topic"
      JRD_TOPIC_NAME: "{{ .Release.Name}}-asb-jrd-topic"
      AMQP_CRD_SHARED_ACCESS_KEY_VALUE: "$(SB_ACCESS_KEY)"
      AMQP_JRD_SHARED_ACCESS_KEY_VALUE: "$(SB_ACCESS_KEY)"
      ORG_ROLE_MAPPING_DB_HOST: "{{ .Release.Name }}-postgresql"
      ORG_ROLE_MAPPING_DB_NAME: "org_role_mapping"
      ORG_ROLE_MAPPING_DB_USERNAME: hmcts
      ORG_ROLE_MAPPING_DB_PASSWORD: ${POSTGRES_PASSWORD}
      ORG_ROLE_MAPPING_DB_PORT: 5432
      ORG_ROLE_MAPPING_DB_OPTIONS: "?stringtype=unspecified"
      RUN_LD_ON_STARTUP: true
      TESTING_SUPPORT_ENABLED: true
      JUDICIAL_REF_APP_V2_ACTIVE: true
      JUDICIAL_REF_APP_V2_FILTER_AUTHS_BY_APP_ID: true

xui-webapp:
  nodejs:
    environment:
      WA_SUPPORTED_JURISDICTIONS: "IA,PRIVATELAW,CIVIL"
      SERVICES_ROLE_ASSIGNMENT_MAPPING_API: https://am-org-role-mapping-service-${SERVICE_FQDN}
