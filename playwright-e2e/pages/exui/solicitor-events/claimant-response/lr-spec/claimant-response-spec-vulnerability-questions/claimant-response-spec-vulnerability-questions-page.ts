import BasePage from '../../../../../../base/base-page';
import ExuiPage from '../../../../exui-page/exui-page';
import CCDCaseData from '../../../../../../models/ccd/ccd-case-data.ts';
import { AllMethodsStep } from '../../../../../../decorators/test-steps';
import {
  heading2,
  vulnerabilityRadioForm,
} from './claimant-response-spec-vulnerability-questions-content.ts';

@AllMethodsStep()
export default class ClaimantResponseSpecVulnerabilityQuestionsPage extends ExuiPage(BasePage) {
  async verifyContent(ccdCaseData: CCDCaseData) {
    await super.runVerifications([
      super.verifyHeadings(ccdCaseData),
      super.expectText(heading2, { ignoreDuplicates: true }),
      super.expectText(vulnerabilityRadioForm.text.label, { ignoreDuplicates: true }),
    ]);
  }

  async selectVulnerabilityYes() {
    await super.clickBySelector(vulnerabilityRadioForm.radioYes.selector);
  }

  async fillVulnerabilityReason() {
    await super.expectText(vulnerabilityRadioForm.supportRequirement.label, {
      ignoreDuplicates: true,
    });
    await super.inputText(
      'Witness has a vulnerability',
      vulnerabilityRadioForm.supportRequirement.selector,
    );
  }

  async submit() {
    await super.retryClickSubmit();
  }
}
